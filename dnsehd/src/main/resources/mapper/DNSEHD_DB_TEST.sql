
CREATE DATABASE DNSEHD;
USE DNSEHD;

CREATE TABLE MEMBER (
    MEMBER_ID VARCHAR(20) NOT NULL,
    MEMBER_NM VARCHAR(50),
    MEMBER_PW VARCHAR(100),
    SEX VARCHAR(10),
    DATE_BIRTH VARCHAR(20),
    HP VARCHAR(20),
    SMS_CONSENT VARCHAR(20),
    EMAIL VARCHAR(20),
    EMAIL_CONSENT VARCHAR(20),
    ZIPCODE VARCHAR(20),
    ROAD_ADDRESS VARCHAR(500),
    JIBUN_ADDRESS VARCHAR(500),
    OTHER_ADDRESS VARCHAR(500),
    ACTIVE_YN CHAR(1) DEFAULT 'y',
	INACTIVE_AT DATE DEFAULT NULL,
    JOIN_DT TIMESTAMP,
    PRIMARY KEY (MEMBER_ID)
);

CREATE TABLE ADMIN (
    ADMIN_ID VARCHAR(20) NOT NULL,
    ADMIN_PW VARCHAR(100),
    PRIMARY KEY (ADMIN_ID)
);

CREATE TABLE SPORT (
    SPORT_NUM INT NOT NULL,
    SPORT_NM VARCHAR(50),
    SPORT_CONTENT VARCHAR(1000),
    SPORT_PRICE INT,
    SPORT_TIME TIME,
    ADMIN_ID VARCHAR(20),
    PRIMARY KEY (SPORT_NUM),
    FOREIGN KEY (ADMIN_ID) REFERENCES ADMIN(ADMIN_ID)
);

CREATE TABLE RESERVATIONS (
    RESV_NUM INT NOT NULL,
    PAYMENT INT,
    RESV_DATE DATE,
    RESERVATION_CANCEL VARCHAR(1),
    MEMBER_ID VARCHAR(20),
    SPORT_NUM INT,
    PRIMARY KEY (RESV_NUM),
    FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER(MEMBER_ID),
    FOREIGN KEY (SPORT_NUM) REFERENCES SPORT(SPORT_NUM)
);

CREATE TABLE ALARMS (
    ALARM_NUM INT NOT NULL,
    ALARM_CONTENT VARCHAR(100),
    ALARM_CHECK VARCHAR(1),
    MEMBER_ID VARCHAR(20),
    PRIMARY KEY (ALARM_NUM),
    FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER(MEMBER_ID)
);

CREATE TABLE NOTICE (
    NOTICE_NUM INT NOT NULL,
    NOTICE_TITLE VARCHAR(50),
    NOTICE_CONTENT VARCHAR(1000),
    NOTICE_DATE DATE,
    ADMIN_ID VARCHAR(20),
    PRIMARY KEY (NOTICE_NUM),
    FOREIGN KEY (ADMIN_ID) REFERENCES ADMIN(ADMIN_ID)
);

CREATE TABLE REVIEWS (
    REVIEWS_NUM INT NOT NULL,
    REVIEWS_TITLE VARCHAR(50),
    REVIEWS_CONTENT VARCHAR(1000),
    REVIEWS_DATE DATE,
    MEMBER_ID VARCHAR(20),
    SPORT_NUM INT,
    RESV_NUM INT,
    PRIMARY KEY (REVIEWS_NUM),
    FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER(MEMBER_ID),
    FOREIGN KEY (SPORT_NUM) REFERENCES SPORT(SPORT_NUM),
    FOREIGN KEY (RESV_NUM) REFERENCES RESERVATIONS(RESV_NUM)
);

CREATE TABLE TEACHER (
    TEACHER_NUM INT NOT NULL,
    TEACHER_NM VARCHAR(20),
    TEACHER_BIRTH VARCHAR(20),
    TEACHER_HP VARCHAR(20),
    MEMBER_ID VARCHAR(20),
    SPORT_NUM INT,
    PRIMARY KEY (TEACHER_NUM),
    FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER(MEMBER_ID),
    FOREIGN KEY (SPORT_NUM) REFERENCES SPORT(SPORT_NUM)
);

CREATE TABLE SPORT_IMAGES (
    SPORTIMG_NUM INT NOT NULL,
    SPORTIMG_NM VARCHAR(200),
    SPORT_NUM INT,
    PRIMARY KEY (SPORTIMG_NUM),
    FOREIGN KEY (SPORT_NUM) REFERENCES SPORT(SPORT_NUM)
);

CREATE TABLE NOTICE_IMAGES (
    NOTICEIMG_NUM INT NOT NULL,
    NOTICEIMG_NM VARCHAR(200),
    NOTICE_NUM INT,
    PRIMARY KEY (NOTICEIMG_NUM),
    FOREIGN KEY (NOTICE_NUM) REFERENCES NOTICE(NOTICE_NUM)
);

CREATE TABLE REVIEWS_IMAGES (
    REVIEWSIMG_NUM INT NOT NULL,
    REVIEWSIMG_NM VARCHAR(200),
    REVIEWS_NUM INT,
    PRIMARY KEY (REVIEWSIMG_NUM),
    FOREIGN KEY (REVIEWS_NUM) REFERENCES REVIEWS(REVIEWS_NUM)
);

CREATE TABLE SCHEDULE (
    SCHEDULE_NUM INT NOT NULL,
    ENROLL_DT DATE,
    MEMO VARCHAR(500),
    SPORT_AGV INT,
    SPORT_NUM INT,
    MEMBER_ID VARCHAR(20),
    PRIMARY KEY (SCHEDULE_NUM),
    FOREIGN KEY (SPORT_NUM) REFERENCES SPORT(SPORT_NUM),
    FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER(MEMBER_ID)
);

CREATE TABLE FAQS (
    FAQ_QUESTION VARCHAR(50) NOT NULL,
    FAQ_ANSWER VARCHAR(1000),
    ADMIN_ID VARCHAR(20),
    PRIMARY KEY (FAQ_QUESTION),
    FOREIGN KEY (ADMIN_ID) REFERENCES ADMIN(ADMIN_ID)
);

CREATE TABLE DIET (
    DIET_ID INT NOT NULL,
    DIET_DATE DATE,
    DIET_MEAL VARCHAR(50),
    DIET_FOODITEM VARCHAR(100),
    DIET_CALORIES INT,
    SCHEDULE_NUM INT,
    PRIMARY KEY (DIET_ID),
    FOREIGN KEY (SCHEDULE_NUM) REFERENCES SCHEDULE(SCHEDULE_NUM)
);
